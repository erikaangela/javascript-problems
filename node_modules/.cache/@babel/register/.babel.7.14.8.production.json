{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\108gu\\\\Desktop\\\\javascript-problems\\\\functions-problems\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\108gu\\\\Desktop\\\\javascript-problems\\\\functions-problems\",\"filename\":\"C:\\\\Users\\\\108gu\\\\Desktop\\\\javascript-problems\\\\functions-problems\\\\problem-1.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\108gu\\\\Desktop\\\\javascript-problems\\\\functions-problems\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems\\",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems",
      "filename": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems\\problem-1.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems\\problem-1.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems\\problem-1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems\\",
        "sourceFileName": "problem-1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// Write a JavaScript function that accepts a string as a parameter and find the longest word within the string.\n\n/* Steps\r\n1. Define a JavaScript function that accepts a string as a parameter.\r\n2. Declare and initialize a variable, testString.\r\n3. Use split() to create a new array of individual words of the accepted string, split between spaces.\r\n4. Loop through the new array, comparing each word's length to each other.\r\n5. Return the value of the index with the greatest length.\r\n*/\nlet testString = 'This is the given test string';\n\nfunction findLongestWord(str) {\n  str.split(\" \");\n}\n\nlet test = findLongestWord(testString);\nconsole.log(test);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2JsZW0tMS5qcyJdLCJuYW1lcyI6WyJ0ZXN0U3RyaW5nIiwiZmluZExvbmdlc3RXb3JkIiwic3RyIiwic3BsaXQiLCJ0ZXN0IiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQUlBLFVBQVUsR0FBRywrQkFBakI7O0FBRUEsU0FBU0MsZUFBVCxDQUF5QkMsR0FBekIsRUFBOEI7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLEdBQVY7QUFDRDs7QUFFRCxJQUFJQyxJQUFJLEdBQUdILGVBQWUsQ0FBQ0QsVUFBRCxDQUExQjtBQUNBSyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXDEwOGd1XFxEZXNrdG9wXFxqYXZhc2NyaXB0LXByb2JsZW1zXFxmdW5jdGlvbnMtcHJvYmxlbXNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFdyaXRlIGEgSmF2YVNjcmlwdCBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgYSBzdHJpbmcgYXMgYSBwYXJhbWV0ZXIgYW5kIGZpbmQgdGhlIGxvbmdlc3Qgd29yZCB3aXRoaW4gdGhlIHN0cmluZy5cclxuXHJcbi8qIFN0ZXBzXHJcbjEuIERlZmluZSBhIEphdmFTY3JpcHQgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgc3RyaW5nIGFzIGEgcGFyYW1ldGVyLlxyXG4yLiBEZWNsYXJlIGFuZCBpbml0aWFsaXplIGEgdmFyaWFibGUsIHRlc3RTdHJpbmcuXHJcbjMuIFVzZSBzcGxpdCgpIHRvIGNyZWF0ZSBhIG5ldyBhcnJheSBvZiBpbmRpdmlkdWFsIHdvcmRzIG9mIHRoZSBhY2NlcHRlZCBzdHJpbmcsIHNwbGl0IGJldHdlZW4gc3BhY2VzLlxyXG40LiBMb29wIHRocm91Z2ggdGhlIG5ldyBhcnJheSwgY29tcGFyaW5nIGVhY2ggd29yZCdzIGxlbmd0aCB0byBlYWNoIG90aGVyLlxyXG41LiBSZXR1cm4gdGhlIHZhbHVlIG9mIHRoZSBpbmRleCB3aXRoIHRoZSBncmVhdGVzdCBsZW5ndGguXHJcbiovXHJcblxyXG5sZXQgdGVzdFN0cmluZyA9ICdUaGlzIGlzIHRoZSBnaXZlbiB0ZXN0IHN0cmluZydcclxuXHJcbmZ1bmN0aW9uIGZpbmRMb25nZXN0V29yZChzdHIpIHtcclxuICBzdHIuc3BsaXQoXCIgXCIpO1xyXG59XHJcblxyXG5sZXQgdGVzdCA9IGZpbmRMb25nZXN0V29yZCh0ZXN0U3RyaW5nKTtcclxuY29uc29sZS5sb2codGVzdCk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "problem-1.js"
      ],
      "names": [
        "testString",
        "findLongestWord",
        "str",
        "split",
        "test",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,UAAU,GAAG,+BAAjB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC5BA,EAAAA,GAAG,CAACC,KAAJ,CAAU,GAAV;AACD;;AAED,IAAIC,IAAI,GAAGH,eAAe,CAACD,UAAD,CAA1B;AACAK,OAAO,CAACC,GAAR,CAAYF,IAAZ",
      "sourceRoot": "C:\\Users\\108gu\\Desktop\\javascript-problems\\functions-problems\\",
      "sourcesContent": [
        "// Write a JavaScript function that accepts a string as a parameter and find the longest word within the string.\r\n\r\n/* Steps\r\n1. Define a JavaScript function that accepts a string as a parameter.\r\n2. Declare and initialize a variable, testString.\r\n3. Use split() to create a new array of individual words of the accepted string, split between spaces.\r\n4. Loop through the new array, comparing each word's length to each other.\r\n5. Return the value of the index with the greatest length.\r\n*/\r\n\r\nlet testString = 'This is the given test string'\r\n\r\nfunction findLongestWord(str) {\r\n  str.split(\" \");\r\n}\r\n\r\nlet test = findLongestWord(testString);\r\nconsole.log(test);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1648494642767
  }
}